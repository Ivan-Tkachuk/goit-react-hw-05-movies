{"version":3,"file":"static/js/415.af15fd37.chunk.js","mappings":"yOA+CA,UAxCa,WACX,OAA4CA,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KAEMC,GAAWC,EAAAA,EAAAA,MAYjB,OAVAC,EAAAA,EAAAA,YAAU,WACR,KACEC,EAAAA,EAAAA,MAAkBC,MAAK,SAAAC,GACrBN,EAAkBM,EAAKC,QACxB,GAGF,CAFC,MAAOC,GACPC,QAAQC,IAAI,UAAWF,EACxB,CACF,GAAE,KAGD,0BACE,SAAC,KAAD,UACGT,EAAeY,KAAI,SAAAC,GAClB,OACE,SAAC,KAAD,WACE,UAAC,KAAD,CAAMC,GAAE,iBAAYD,EAAME,IAAMC,MAAO,CAAEC,KAAMf,GAA/C,WACE,SAAC,KAAD,CACEgB,IACEL,EAAMM,YAAN,yCACsCN,EAAMM,aACxCC,EAENC,IAAKR,EAAMS,SAEb,SAAC,KAAD,UAAQT,EAAMS,aAVAC,EAAAA,EAAAA,MAcrB,OAIR,C,+JC3CYC,EAAUC,EAAAA,EAAAA,GAAH,8RAaPC,EAAcD,EAAAA,EAAAA,GAAH,oTAWXE,EAAmBF,EAAAA,EAAAA,IAAH,qFAOhBG,EAAQH,EAAAA,EAAAA,EAAH,gH,iMC/BZI,EAAU,mCAEHxB,EAAe,mCAAG,0FACZ,gCADY,SAGNyB,EAAAA,EAAAA,IAAA,UAFN,gCAEM,uCACqBD,IAJf,cAGvBE,EAHuB,yBAMtBA,EAASxB,MANa,2CAAH,qDASfyB,EAAc,mCAAG,WAAMC,GAAN,6EACX,gCADW,SAGLH,EAAAA,EAAAA,IAAA,UAFN,gCAEM,iBACDG,EADC,qBACmBJ,EADnB,oBAHK,cAGtBE,EAHsB,yBAOrBA,EAASxB,MAPY,2CAAH,sDAUd2B,EAAY,mCAAG,WAAMD,GAAN,6EACT,gCADS,SAGHH,EAAAA,EAAAA,IAAA,UAFN,gCAEM,iBACDG,EADC,6BAC2BJ,EAD3B,0BAHG,cAGpBE,EAHoB,yBAOnBA,EAASxB,MAPU,2CAAH,sDAUZ4B,EAAe,mCAAG,WAAMF,GAAN,6EACZ,gCADY,SAGNH,EAAAA,EAAAA,IAAA,UAFN,gCAEM,iBACDG,EADC,6BAC2BJ,EAD3B,2BAHM,cAGvBE,EAHuB,yBAOtBA,EAASxB,MAPa,2CAAH,sDAUf6B,EAAc,mCAAG,WAAMC,GAAN,6EACX,gCADW,SAGLP,EAAAA,EAAAA,IAAA,UAFN,gCAEM,kCACgBD,EADhB,4DAC2EQ,IAJtE,cAGtBN,EAHsB,yBAOrBA,EAASxB,MAPY,2CAAH,qD,mJC1CpB,IAkBIgB,EAAS,eAACe,EAAD,uDAAQ,GAAR,OAClBC,OAAOC,gBAAgB,IAAIC,WAAWH,IAAOI,QAAO,SAAC3B,EAAI4B,GAWvD,OARE5B,IAFF4B,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,GAGT,GAAE,GAbe,C","sources":["pages/Home.jsx","pages/Home.styled.jsx","services/themoviedbAPI.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { getTrendingList } from 'services/themoviedbAPI';\nimport { nanoid } from 'nanoid';\nimport { Link, useLocation } from 'react-router-dom';\nimport pictureNotFound from '../pages/pictureNotFound.jpg';\nimport { Gallery, GalleryItem, GalleryItemImage, Title } from './Home.styled';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n\n  const location = useLocation();\n\n  useEffect(() => {\n    try {\n      getTrendingList().then(data => {\n        setTrendingMovies(data.results);\n      });\n    } catch (error) {\n      console.log('error: ', error);\n    }\n  }, []);\n\n  return (\n    <div>\n      <Gallery>\n        {trendingMovies.map(movie => {\n          return (\n            <GalleryItem key={nanoid()}>\n              <Link to={`movies/${movie.id}`} state={{ from: location }}>\n                <GalleryItemImage\n                  src={\n                    movie.poster_path\n                      ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n                      : pictureNotFound\n                  }\n                  alt={movie.title}\n                />\n                <Title>{movie.title}</Title>\n              </Link>\n            </GalleryItem>\n          );\n        })}\n      </Gallery>\n    </div>\n  );\n};\n\nexport default Home;\n","import styled from '@emotion/styled';\n\nexport const Gallery = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 15px;\n  margin-bottom: 15px;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const GalleryItem = styled.li`\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  &:hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\n\nexport const GalleryItemImage = styled.img`\n  width: 100%;\n  height: 530px;\n  object-fit: cover;\n  }\n`;\n\nexport const Title = styled.p`\n  text-decoration: none;\n  text-align: center;\n  color: #212121;\n  font-weight: 500;\n`;\n","import axios from 'axios';\n\nconst API_KEY = '148c9397aa3eec308089adaec56ced74';\n\nexport const getTrendingList = async () => {\n  const BASE_URL = 'https://api.themoviedb.org/3/';\n\n  const response = await axios.get(\n    `${BASE_URL}trending/movie/day?&api_key=${API_KEY}`\n  );\n  return response.data;\n};\n\nexport const getMovieDetail = async movieId => {\n  const BASE_URL = 'https://api.themoviedb.org/3/';\n\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}?&api_key=${API_KEY}&language=en-US`\n  );\n\n  return response.data;\n};\n\nexport const getMovieCast = async movieId => {\n  const BASE_URL = 'https://api.themoviedb.org/3/';\n\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}/credits?&api_key=${API_KEY}&language=en-USpage=1`\n  );\n\n  return response.data;\n};\n\nexport const getMovieReviews = async movieId => {\n  const BASE_URL = 'https://api.themoviedb.org/3/';\n\n  const response = await axios.get(\n    `${BASE_URL}movie/${movieId}/reviews?&api_key=${API_KEY}&language=en-US&page=1`\n  );\n\n  return response.data;\n};\n\nexport const getMovieSearch = async query => {\n  const BASE_URL = 'https://api.themoviedb.org/3/';\n\n  const response = await axios.get(\n    `${BASE_URL}/search/movie?&api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n  );\n\n  return response.data;\n};\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["useState","trendingMovies","setTrendingMovies","location","useLocation","useEffect","getTrendingList","then","data","results","error","console","log","map","movie","to","id","state","from","src","poster_path","pictureNotFound","alt","title","nanoid","Gallery","styled","GalleryItem","GalleryItemImage","Title","API_KEY","axios","response","getMovieDetail","movieId","getMovieCast","getMovieReviews","getMovieSearch","query","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}