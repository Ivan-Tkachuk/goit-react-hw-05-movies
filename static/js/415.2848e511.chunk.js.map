{"version":3,"file":"static/js/415.2848e511.chunk.js","mappings":"sNAsCA,UAhCa,WAEb,OAA4CA,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KAEMC,GAAWC,EAAAA,EAAAA,MAcjB,OAZAC,EAAAA,EAAAA,YAAU,WACN,KAEIC,EAAAA,EAAAA,MAAkBC,MAAK,SAAAC,GACnBN,EAAkBM,EAAKC,QAE1B,GAGJ,CAFC,MAAOC,GACLC,QAAQC,IAAI,UAAWF,EAC1B,CACJ,GAAE,KAGC,0BAEI,wBACHT,EAAeY,KAAI,SAAAC,GAChB,OAAO,yBACH,SAAC,KAAD,CAAMC,GAAE,iBAAYD,EAAME,IAAMC,MAAO,CAACC,KAAMf,GAA9C,SAA0DW,EAAMK,UADpDC,EAAAA,EAAAA,MAGnB,OAIJ,C,iMCjCKC,EAAU,mCAEHf,EAAe,mCAAG,0FACV,gCADU,SAQJgB,EAAAA,EAAAA,IAAA,UAPN,gCAOM,uCAAoDD,IARhD,cAQrBE,EARqB,yBAUpBA,EAASf,MAVW,2CAAH,qDAqBbgB,EAAc,mCAAG,WAAOC,GAAP,6EACX,gCADW,SAGLH,EAAAA,EAAAA,IAAA,UAFN,gCAEM,iBACDG,EADC,qBACmBJ,EADnB,oBAHK,cAGtBE,EAHsB,yBAOnBA,EAASf,MAPU,2CAAH,sDAgBdkB,EAAY,mCAAG,WAAOD,GAAP,6EACT,gCADS,SAGHH,EAAAA,EAAAA,IAAA,UAFN,gCAEM,iBACDG,EADC,6BAC2BJ,EAD3B,0BAHG,cAGpBE,EAHoB,yBAOjBA,EAASf,MAPQ,2CAAH,sDAgBZmB,EAAe,mCAAG,WAAOF,GAAP,6EACZ,gCADY,SAGNH,EAAAA,EAAAA,IAAA,UAFN,gCAEM,iBACDG,EADC,6BAC2BJ,EAD3B,2BAHM,cAGvBE,EAHuB,yBAOpBA,EAASf,MAPW,2CAAH,sDAgBfoB,EAAc,mCAAG,WAAOC,GAAP,6EACX,gCADW,SAGLP,EAAAA,EAAAA,IAAA,UAFN,gCAEM,kCACgBD,EADhB,4DAC2EQ,IAJtE,cAGtBN,EAHsB,yBAOnBA,EAASf,MAPU,2CAAH,qD,wDCzEtB,IAkBIY,EAAS,eAACU,EAAD,uDAAQ,GAAR,OAClBC,OAAOC,gBAAgB,IAAIC,WAAWH,IAAOI,QAAO,SAAClB,EAAImB,GAWvD,OAREnB,IAFFmB,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,GAGT,GAAE,GAbe,C","sources":["pages/Home.jsx","services/themoviedbAPI.js","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\nimport { getTrendingList } from \"services/themoviedbAPI\";\nimport { nanoid } from 'nanoid';\nimport { Link, useLocation } from \"react-router-dom\";\n// import Loader from \"components/Loader/Loader\";\n\nconst Home = () => {\n\nconst [trendingMovies, setTrendingMovies] = useState([]);\n// const [isLoading, setIsLoading] = useState(false);\nconst location = useLocation();\n\nuseEffect(() => {\n    try {\n        // setIsLoading(true);\n        getTrendingList().then(data => {\n            setTrendingMovies(data.results);\n            // setIsLoading(false);\n        });\n    } catch (error) {\n        console.log('error: ', error);\n    }\n}, [])\n\nreturn (\n    <div>\n        {/* {isLoading && <Loader />} */}\n        <ul>\n    {trendingMovies.map(movie => {\n        return <li key={nanoid()}> \n            <Link to={`movies/${movie.id}`} state={{from: location}}>{movie.title}</Link>\n            </li>;\n    }) }\n        </ul>\n</div>\n)\n}\n\nexport default Home;","import axios from \"axios\";\n\n\nconst API_KEY = '148c9397aa3eec308089adaec56ced74';\n\nexport const getTrendingList = async () => {\n    const BASE_URL = 'https://api.themoviedb.org/3/';\n  \n    // if (abortController.current) {\n    //   abortController.current.abort();\n    // }\n    // abortController.current = new AbortController();\n  \n    const response = await axios.get(`${BASE_URL}trending/movie/day?&api_key=${API_KEY}`\n    );\n    return response.data;\n\n    // if (response.ok) {\n    //   return response.json();\n    // }\n    // return await Promise.reject(\n    //   new Error(`There is't result`)\n    // );\n  };\n\n\n  export const getMovieDetail = async (movieId) => {\n    const BASE_URL = 'https://api.themoviedb.org/3/';\n  \n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}?&api_key=${API_KEY}&language=en-US`\n    );\n\n      return response.data;\n    // if (response.ok) {\n    //   return response.json();\n    // }\n    // return await Promise.reject(\n    //   new Error(`There is't result`)\n    // );\n  };\n\n  export const getMovieCast = async (movieId) => {\n    const BASE_URL = 'https://api.themoviedb.org/3/';\n  \n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}/credits?&api_key=${API_KEY}&language=en-USpage=1`\n    );\n\n      return response.data;\n    // if (response.ok) {\n    //   return response.json();\n    // }\n    // return await Promise.reject(\n    //   new Error(`There is't result`)\n    // );\n  };\n\n  export const getMovieReviews = async (movieId) => {\n    const BASE_URL = 'https://api.themoviedb.org/3/';\n  \n    const response = await axios.get(\n      `${BASE_URL}movie/${movieId}/reviews?&api_key=${API_KEY}&language=en-US&page=1`\n    );\n\n      return response.data;\n    // if (response.ok) {\n    //   return response.json();\n    // }\n    // return await Promise.reject(\n    //   new Error(`There is't result`)\n    // );\n  };\n\n  export const getMovieSearch = async (query) => {\n    const BASE_URL = 'https://api.themoviedb.org/3/';\n  \n    const response = await axios.get(\n      `${BASE_URL}/search/movie?&api_key=${API_KEY}&language=en-US&page=1&include_adult=false&query=${query}`\n    );\n\n      return response.data;\n    // if (response.ok) {\n    //   return response.json();\n    // }\n    // return await Promise.reject(\n    //   new Error(`There is't result`)\n    // );\n  };\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["useState","trendingMovies","setTrendingMovies","location","useLocation","useEffect","getTrendingList","then","data","results","error","console","log","map","movie","to","id","state","from","title","nanoid","API_KEY","axios","response","getMovieDetail","movieId","getMovieCast","getMovieReviews","getMovieSearch","query","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}